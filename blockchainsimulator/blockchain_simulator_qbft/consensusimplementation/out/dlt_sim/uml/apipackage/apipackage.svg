<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="2209px" preserveAspectRatio="none" style="width:1026px;height:2209px;background:#FFFFFF;" version="1.1" viewBox="0 0 1026 2209" width="1026px" zoomAndPan="magnify"><defs/><g><!--MD5=[a16a3799a95c105a63f974298999c0eb]
cluster org.renaultleat.api--><g id="cluster_org.renaultleat.api"><path d="M8.5,6 L154.5,6 A3.75,3.75 0 0 1 157,8.5 L164,28.2969 L1016.5,28.2969 A2.5,2.5 0 0 1 1019,30.7969 L1019,2199.5 A2.5,2.5 0 0 1 1016.5,2202 L8.5,2202 A2.5,2.5 0 0 1 6,2199.5 L6,8.5 A2.5,2.5 0 0 1 8.5,6 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6" x2="164" y1="28.2969" y2="28.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="145" x="10" y="20.9951">org.renaultleat.api</text></g><!--MD5=[91dfbf3fdccf535f64556311969c93b8]
class Simulator_controller--><g id="elem_Simulator_controller"><rect codeLine="2" fill="#F1F1F1" height="1237.6719" id="Simulator_controller" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="558" x="22" y="41"/><ellipse cx="228.75" cy="57" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M231.7188,62.6406 Q231.1406,62.9375 230.5,63.0781 Q229.8594,63.2344 229.1563,63.2344 Q226.6563,63.2344 225.3281,61.5938 Q224.0156,59.9375 224.0156,56.8125 Q224.0156,53.6875 225.3281,52.0313 Q226.6563,50.375 229.1563,50.375 Q229.8594,50.375 230.5,50.5313 Q231.1563,50.6875 231.7188,50.9844 L231.7188,53.7031 Q231.0938,53.125 230.5,52.8594 Q229.9063,52.5781 229.2813,52.5781 Q227.9375,52.5781 227.25,53.6563 Q226.5625,54.7188 226.5625,56.8125 Q226.5625,58.9063 227.25,59.9844 Q227.9375,61.0469 229.2813,61.0469 Q229.9063,61.0469 230.5,60.7813 Q231.0938,60.5 231.7188,59.9219 L231.7188,62.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="249.25" y="61.8467">Simulator_controller</text><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="579" y1="73" y2="73"/><polygon fill="none" points="33,82.6484,29,88.6484,37,88.6484" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="42" y="89.9951">blockPool : BlockPool</text><polygon fill="none" points="33,98.9453,29,104.9453,37,104.9453" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="42" y="106.292">blockchain : Blockchain</text><polygon fill="none" points="33,115.2422,29,121.2422,37,121.2422" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="42" y="122.5889">gson : Gson</text><polygon fill="none" points="33,131.5391,29,137.5391,37,137.5391" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="42" y="138.8857">nonValidator : NonValidator</text><polygon fill="none" points="33,147.8359,29,153.8359,37,153.8359" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="42" y="155.1826">p2pserver : P2PServer</text><polygon fill="none" points="33,164.1328,29,170.1328,37,170.1328" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="448" x="42" y="171.4795">bftConsensusMessageHandler : BFTConsensusMessageHandler</text><polygon fill="none" points="33,180.4297,29,186.4297,37,186.4297" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="522" x="42" y="187.7764">bftConsensusRoundChangeHandler : BFTConsensusRoundChangeHandler</text><polygon fill="none" points="33,196.7266,29,202.7266,37,202.7266" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="244" x="42" y="204.0732">bftMessagePool : BFTMessagePool</text><polygon fill="none" points="33,213.0234,29,219.0234,37,219.0234" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="452" x="42" y="220.3701">bftTransactionMessageHandler : BFTTransactionMessageHandler</text><polygon fill="none" points="33,229.3203,29,235.3203,37,235.3203" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="532" x="42" y="236.667">bftTransactionMessageHandlerPenta : BFTTransactionMessageHandlerPenta</text><polygon fill="none" points="33,245.6172,29,251.6172,37,251.6172" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="518" x="42" y="252.9639">bftTransactionMessageHandlerQuar : BFTTransactionMessageHandlerQuar</text><polygon fill="none" points="33,261.9141,29,267.9141,37,267.9141" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="504" x="42" y="269.2607">bftTransactionMessageHandlerSec : BFTTransactionMessageHandlerSec</text><polygon fill="none" points="33,278.2109,29,284.2109,37,284.2109" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="490" x="42" y="285.5576">bftTransactionMessageHandlerSix : BFTTransactionMessageHandlerSix</text><polygon fill="none" points="33,294.5078,29,300.5078,37,300.5078" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="498" x="42" y="301.8545">bftTransactionMessageHandlerTer : BFTTransactionMessageHandlerTer</text><polygon fill="none" points="33,310.8047,29,316.8047,37,316.8047" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="239" x="42" y="318.1514">queueResource : QueueResource</text><polygon fill="none" points="33,327.1016,29,333.1016,37,333.1016" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="254" x="42" y="334.4482">simulator_collator : Simulator_collator</text><polygon fill="none" points="33,343.3984,29,349.3984,37,349.3984" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="232" x="42" y="350.7451">simulator_result : Simulator_result</text><polygon fill="none" points="33,359.6953,29,365.6953,37,365.6953" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="252" x="42" y="367.042">simulator_service : Simulator_service</text><polygon fill="none" points="33,375.9922,29,381.9922,37,381.9922" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="42" y="383.3389">synchronizer : Synchronizer</text><polygon fill="none" points="33,392.2891,29,398.2891,37,398.2891" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="231" x="42" y="399.6357">transactionPool : TransactionPool</text><polygon fill="none" points="33,408.5859,29,414.5859,37,414.5859" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="42" y="415.9326">validator : Validator</text><polygon fill="none" points="33,424.8828,29,430.8828,37,430.8828" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="42" y="432.2295">wallet : Wallet</text><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="579" y1="439.5313" y2="439.5313"/><ellipse cx="33" cy="453.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="42" y="456.5264">Simulator_controller()</text><ellipse cx="33" cy="469.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="42" y="472.8232">getAsValidator() : String</text><ellipse cx="33" cy="485.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="42" y="489.1201">getBlockNo() : String</text><ellipse cx="33" cy="502.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="42" y="505.417">getBlockSize() : String</text><ellipse cx="33" cy="518.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="42" y="521.7139">getBlocks() : String</text><ellipse cx="33" cy="534.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="174" x="42" y="538.0107">getBlocksinPool() : String</text><ellipse cx="33" cy="550.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="171" x="42" y="554.3076">getCommitRate() : String</text><ellipse cx="33" cy="567.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="42" y="570.6045">getEntryTPS() : String</text><ellipse cx="33" cy="583.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="42" y="586.9014">getFinalisedTPS() : String</text><ellipse cx="33" cy="599.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="42" y="603.1982">getIP() : String</text><ellipse cx="33" cy="616.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="42" y="619.4951">getMinApproval() : String</text><ellipse cx="33" cy="632.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="183" x="42" y="635.792">getNodeBehavior() : String</text><ellipse cx="33" cy="648.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="176" x="42" y="652.0889">getNodeLatency() : String</text><ellipse cx="33" cy="665.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="180" x="42" y="668.3857">getNodeNetwork() : String</text><ellipse cx="33" cy="681.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="42" y="684.6826">getNodeProperty() : String</text><ellipse cx="33" cy="697.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="42" y="700.9795">getPeers() : String</text><ellipse cx="33" cy="713.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="172" x="42" y="717.2764">getPrepareRate() : String</text><ellipse cx="33" cy="730.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="187" x="42" y="733.5732">getProcessedTPS() : String</text><ellipse cx="33" cy="746.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="42" y="749.8701">getRoundChange() : String</text><ellipse cx="33" cy="762.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="218" x="42" y="766.167">getRoundChangeRate() : String</text><ellipse cx="33" cy="779.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="152" x="42" y="782.4639">getStartTime() : String</text><ellipse cx="33" cy="795.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="42" y="798.7607">getTotalNodes() : String</text><ellipse cx="33" cy="811.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="187" x="42" y="815.0576">getTotalValidators() : String</text><ellipse cx="33" cy="828.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="257" x="42" y="831.3545">getTransactionsValidatedNo() : String</text><ellipse cx="33" cy="844.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="348" x="42" y="847.6514">getTransactionsinPoolNo(roundno : String) : String</text><ellipse cx="33" cy="860.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="42" y="863.9482">getVersion() : String</text><ellipse cx="33" cy="876.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="42" y="880.2451">initiateConnection() : String</text><ellipse cx="33" cy="893.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="42" y="896.542">listentoPeers() : String</text><ellipse cx="33" cy="909.4922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="328" x="42" y="912.8389">sendMessageToPeer(message : String) : String</text><ellipse cx="33" cy="925.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="331" x="42" y="929.1357">setRoundchangeTimeOut(value : String) : String</text><ellipse cx="33" cy="942.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="190" x="42" y="945.4326">startResultCollator() : String</text><ellipse cx="33" cy="958.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="265" x="42" y="961.7295">startSimulation1(notxs : String) : String</text><ellipse cx="33" cy="974.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="265" x="42" y="978.0264">startSimulation2(notxs : String) : String</text><ellipse cx="33" cy="990.9766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="265" x="42" y="994.3232">startSimulation3(notxs : String) : String</text><ellipse cx="33" cy="1007.2734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="265" x="42" y="1010.6201">startSimulation4(notxs : String) : String</text><ellipse cx="33" cy="1023.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="265" x="42" y="1026.917">startSimulation5(notxs : String) : String</text><ellipse cx="33" cy="1039.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="265" x="42" y="1043.2139">startSimulation6(notxs : String) : String</text><ellipse cx="33" cy="1056.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="265" x="42" y="1059.5107">startSimulation7(notxs : String) : String</text><ellipse cx="33" cy="1072.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="265" x="42" y="1075.8076">startSimulation8(notxs : String) : String</text><ellipse cx="33" cy="1088.7578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="265" x="42" y="1092.1045">startSimulation9(notxs : String) : String</text><ellipse cx="33" cy="1105.0547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="298" x="42" y="1108.4014">startSimulationSingle(notxs : String) : String</text><ellipse cx="33" cy="1121.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="190" x="42" y="1124.6982">stopResultCollator() : String</text><ellipse cx="33" cy="1137.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="264" x="42" y="1140.9951">storeAsValidator(value : String) : String</text><ellipse cx="33" cy="1153.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="255" x="42" y="1157.292">storeBlockSize(value : String) : String</text><ellipse cx="33" cy="1170.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="285" x="42" y="1173.5889">storeNodeBehavior(value : String) : String</text><ellipse cx="33" cy="1186.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="278" x="42" y="1189.8857">storeNodeLatency(value : String) : String</text><ellipse cx="33" cy="1202.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="282" x="42" y="1206.1826">storeNodeNetwork(value : String) : String</text><ellipse cx="33" cy="1219.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="283" x="42" y="1222.4795">storeNodeProperty(value : String) : String</text><ellipse cx="33" cy="1235.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="228" x="42" y="1238.7764">storePeers(value : String) : String</text><ellipse cx="33" cy="1251.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="267" x="42" y="1255.0732">storeTotalNodes(value : String) : String</text><ellipse cx="33" cy="1268.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="289" x="42" y="1271.3701">storeTotalValidators(value : String) : String</text></g><!--MD5=[2c0e6e5ec2734dd917b8398ef3c0e9b9]
class Simulator_result--><g id="elem_Simulator_result"><rect codeLine="77" fill="#F1F1F1" height="145.7813" id="Simulator_result" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="387" x="615.5" y="587"/><ellipse cx="749.75" cy="603" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M752.7188,608.6406 Q752.1406,608.9375 751.5,609.0781 Q750.8594,609.2344 750.1563,609.2344 Q747.6563,609.2344 746.3281,607.5938 Q745.0156,605.9375 745.0156,602.8125 Q745.0156,599.6875 746.3281,598.0313 Q747.6563,596.375 750.1563,596.375 Q750.8594,596.375 751.5,596.5313 Q752.1563,596.6875 752.7188,596.9844 L752.7188,599.7031 Q752.0938,599.125 751.5,598.8594 Q750.9063,598.5781 750.2813,598.5781 Q748.9375,598.5781 748.25,599.6563 Q747.5625,600.7188 747.5625,602.8125 Q747.5625,604.9063 748.25,605.9844 Q748.9375,607.0469 750.2813,607.0469 Q750.9063,607.0469 751.5,606.7813 Q752.0938,606.5 752.7188,605.9219 L752.7188,608.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="770.25" y="607.8467">Simulator_result</text><line style="stroke:#181818;stroke-width:0.5;" x1="616.5" x2="1001.5" y1="619" y2="619"/><ellipse cx="626.5" cy="632.6484" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="307" x="635.5" y="635.9951">commitCounter : Map&lt;Timestamp, Integer&gt;</text><ellipse cx="626.5" cy="648.9453" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="336" x="635.5" y="652.292">finalisedTpsStorage : Map&lt;Timestamp, Integer&gt;</text><ellipse cx="626.5" cy="665.2422" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="361" x="635.5" y="668.5889">inputTpsStorage : SortedMap&lt;Timestamp, Integer&gt;</text><ellipse cx="626.5" cy="681.5391" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="310" x="635.5" y="684.8857">prepareCounter : Map&lt;Timestamp, Integer&gt;</text><ellipse cx="626.5" cy="697.8359" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="351" x="635.5" y="701.1826">roundChangeCounter : Map&lt;Timestamp, Integer&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="616.5" x2="1001.5" y1="708.4844" y2="708.4844"/><ellipse cx="626.5" cy="722.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="120" x="635.5" y="725.4795">Simulator_result()</text></g><!--MD5=[2d42af8ec271a0ac230335f19dd7311c]
class Simulator_service--><g id="elem_Simulator_service"><rect codeLine="85" fill="#F1F1F1" height="846.5469" id="Simulator_service" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="652" x="22" y="1339"/><ellipse cx="283.75" cy="1355" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M286.7188,1360.6406 Q286.1406,1360.9375 285.5,1361.0781 Q284.8594,1361.2344 284.1563,1361.2344 Q281.6563,1361.2344 280.3281,1359.5938 Q279.0156,1357.9375 279.0156,1354.8125 Q279.0156,1351.6875 280.3281,1350.0313 Q281.6563,1348.375 284.1563,1348.375 Q284.8594,1348.375 285.5,1348.5313 Q286.1563,1348.6875 286.7188,1348.9844 L286.7188,1351.7031 Q286.0938,1351.125 285.5,1350.8594 Q284.9063,1350.5781 284.2813,1350.5781 Q282.9375,1350.5781 282.25,1351.6563 Q281.5625,1352.7188 281.5625,1354.8125 Q281.5625,1356.9063 282.25,1357.9844 Q282.9375,1359.0469 284.2813,1359.0469 Q284.9063,1359.0469 285.5,1358.7813 Q286.0938,1358.5 286.7188,1357.9219 L286.7188,1360.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="120" x="304.25" y="1359.8467">Simulator_service</text><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="673" y1="1371" y2="1371"/><polygon fill="none" points="33,1380.6484,29,1386.6484,37,1386.6484" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="42" y="1387.9951">p2pServer : P2PServer</text><polygon fill="none" points="33,1396.9453,29,1402.9453,37,1402.9453" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="232" x="42" y="1404.292">simulator_result : Simulator_result</text><polygon fill="none" points="33,1413.2422,29,1419.2422,37,1419.2422" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="42" y="1420.5889">wallet : Wallet</text><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="673" y1="1427.8906" y2="1427.8906"/><ellipse cx="33" cy="1441.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="626" x="42" y="1444.8857">Simulator_service(p2pServer : P2PServer, wallet : Wallet, simulator_result : Simulator_result)</text><ellipse cx="33" cy="1457.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="223" x="42" y="1461.1826">Simulator_service(wallet : Wallet)</text><ellipse cx="33" cy="1474.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="42" y="1477.4795">getAsValidator() : boolean</text><ellipse cx="33" cy="1490.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="130" x="42" y="1493.7764">getBlockSize() : int</text><ellipse cx="33" cy="1506.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="42" y="1510.0732">getBlocks() : String</text><ellipse cx="33" cy="1523.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="212" x="42" y="1526.3701">getBlocksinBlockPool() : String</text><ellipse cx="33" cy="1539.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="381" x="42" y="1542.667">getCommitMessageRate() : Map&lt;Timestamp, Integer&gt;</text><ellipse cx="33" cy="1555.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="284" x="42" y="1558.9639">getCommitTPSJSON() : List&lt;JSONObject&gt;</text><ellipse cx="33" cy="1571.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="320" x="42" y="1575.2607">getFinalisedTPS() : Map&lt;Timestamp, Integer&gt;</text><ellipse cx="33" cy="1588.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="291" x="42" y="1591.5576">getFinalisedTPSJSON() : List&lt;JSONObject&gt;</text><ellipse cx="33" cy="1604.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="42" y="1607.8545">getIP() : String</text><ellipse cx="33" cy="1620.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="42" y="1624.1514">getIPS() : String</text><ellipse cx="33" cy="1637.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="295" x="42" y="1640.4482">getInputTPS() : Map&lt;Timestamp, Integer&gt;</text><ellipse cx="33" cy="1653.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="266" x="42" y="1656.7451">getInputTPSJSON() : List&lt;JSONObject&gt;</text><ellipse cx="33" cy="1669.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="489" x="42" y="1673.042">getJSONData(objData : Map&lt;Timestamp, Integer&gt;) : List&lt;JSONObject&gt;</text><ellipse cx="33" cy="1685.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="183" x="42" y="1689.3389">getNodeBehavior() : String</text><ellipse cx="33" cy="1702.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="166" x="42" y="1705.6357">getNodeLatency() : long</text><ellipse cx="33" cy="1718.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="180" x="42" y="1721.9326">getNodeNetwork() : String</text><ellipse cx="33" cy="1734.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="158" x="42" y="1738.2295">getNodeProperty() : int</text><ellipse cx="33" cy="1751.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="42" y="1754.5264">getNoofBlocks() : int</text><ellipse cx="33" cy="1767.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="382" x="42" y="1770.8232">getPrepareMessageRate() : Map&lt;Timestamp, Integer&gt;</text><ellipse cx="33" cy="1783.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="285" x="42" y="1787.1201">getPrepareTPSJSON() : List&lt;JSONObject&gt;</text><ellipse cx="33" cy="1800.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="187" x="42" y="1803.417">getProcessedTPS() : String</text><ellipse cx="33" cy="1816.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="176" x="42" y="1819.7139">getRoundChange() : long</text><ellipse cx="33" cy="1832.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="428" x="42" y="1836.0107">getRoundChangeMessageRate() : Map&lt;Timestamp, Integer&gt;</text><ellipse cx="33" cy="1848.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="331" x="42" y="1852.3076">getRoundChangeTPSJSON() : List&lt;JSONObject&gt;</text><ellipse cx="33" cy="1865.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="142" x="42" y="1868.6045">getTotalNodes() : int</text><ellipse cx="33" cy="1881.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="291" x="42" y="1884.9014">getTotalTransactionsValidatedNo() : String</text><ellipse cx="33" cy="1897.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="42" y="1901.1982">getTotalValidators() : int</text><ellipse cx="33" cy="1914.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="348" x="42" y="1917.4951">getTransactionsinPoolNo(roundno : String) : String</text><ellipse cx="33" cy="1930.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="42" y="1933.792">getVersion() : String</text><ellipse cx="33" cy="1946.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="135" x="42" y="1950.0889">initiateConnection()</text><ellipse cx="33" cy="1963.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="42" y="1966.3857">listentoPeers()</text><ellipse cx="33" cy="1979.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="275" x="42" y="1982.6826">sendMessageToPeer(message : String)</text><ellipse cx="33" cy="1995.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="221" x="42" y="1998.9795">setRoundChange(value : String)</text><ellipse cx="33" cy="2011.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="335" x="42" y="2015.2764">startSimulation(notxs : String, nothreads : String)</text><ellipse cx="33" cy="2028.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="245" x="42" y="2031.5732">startSimulationSingle(notxs : String)</text><ellipse cx="33" cy="2044.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="211" x="42" y="2047.8701">storeAsValidator(value : String)</text><ellipse cx="33" cy="2060.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="42" y="2064.167">storeBlockSize(value : String)</text><ellipse cx="33" cy="2077.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="156" x="42" y="2080.4639">storeIPS(value : String)</text><ellipse cx="33" cy="2093.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="232" x="42" y="2096.7607">storeNodeBehavior(value : String)</text><ellipse cx="33" cy="2109.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="225" x="42" y="2113.0576">storeNodeLatency(value : String)</text><ellipse cx="33" cy="2126.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="229" x="42" y="2129.3545">storeNodeNetwork(value : String)</text><ellipse cx="33" cy="2142.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="230" x="42" y="2145.6514">storeNodeProperty(value : String)</text><ellipse cx="33" cy="2158.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="214" x="42" y="2161.9482">storeTotalNodes(value : String)</text><ellipse cx="33" cy="2174.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="236" x="42" y="2178.2451">storeTotalValidators(value : String)</text></g><!--MD5=[98dfeda7ba39f240809e03a52338cd36]
@startuml
package org.renaultleat.api {
  class Simulator_controller {
    ~ blockPool : BlockPool
    ~ blockchain : Blockchain
    ~ gson : Gson
    ~ nonValidator : NonValidator
    ~ p2pserver : P2PServer
    ~ bftConsensusMessageHandler : BFTConsensusMessageHandler
    ~ bftConsensusRoundChangeHandler : BFTConsensusRoundChangeHandler
    ~ bftMessagePool : BFTMessagePool
    ~ bftTransactionMessageHandler : BFTTransactionMessageHandler
    ~ bftTransactionMessageHandlerPenta : BFTTransactionMessageHandlerPenta
    ~ bftTransactionMessageHandlerQuar : BFTTransactionMessageHandlerQuar
    ~ bftTransactionMessageHandlerSec : BFTTransactionMessageHandlerSec
    ~ bftTransactionMessageHandlerSix : BFTTransactionMessageHandlerSix
    ~ bftTransactionMessageHandlerTer : BFTTransactionMessageHandlerTer
    ~ queueResource : QueueResource
    ~ simulator_collator : Simulator_collator
    ~ simulator_result : Simulator_result
    ~ simulator_service : Simulator_service
    ~ synchronizer : Synchronizer
    ~ transactionPool : TransactionPool
    ~ validator : Validator
    ~ wallet : Wallet
    + Simulator_controller()
    + getAsValidator() : String
    + getBlockNo() : String
    + getBlockSize() : String
    + getBlocks() : String
    + getBlocksinPool() : String
    + getCommitRate() : String
    + getEntryTPS() : String
    + getFinalisedTPS() : String
    + getIP() : String
    + getMinApproval() : String
    + getNodeBehavior() : String
    + getNodeLatency() : String
    + getNodeNetwork() : String
    + getNodeProperty() : String
    + getPeers() : String
    + getPrepareRate() : String
    + getProcessedTPS() : String
    + getRoundChange() : String
    + getRoundChangeRate() : String
    + getStartTime() : String
    + getTotalNodes() : String
    + getTotalValidators() : String
    + getTransactionsValidatedNo() : String
    + getTransactionsinPoolNo(roundno : String) : String
    + getVersion() : String
    + initiateConnection() : String
    + listentoPeers() : String
    + sendMessageToPeer(message : String) : String
    + setRoundchangeTimeOut(value : String) : String
    + startResultCollator() : String
    + startSimulation1(notxs : String) : String
    + startSimulation2(notxs : String) : String
    + startSimulation3(notxs : String) : String
    + startSimulation4(notxs : String) : String
    + startSimulation5(notxs : String) : String
    + startSimulation6(notxs : String) : String
    + startSimulation7(notxs : String) : String
    + startSimulation8(notxs : String) : String
    + startSimulation9(notxs : String) : String
    + startSimulationSingle(notxs : String) : String
    + stopResultCollator() : String
    + storeAsValidator(value : String) : String
    + storeBlockSize(value : String) : String
    + storeNodeBehavior(value : String) : String
    + storeNodeLatency(value : String) : String
    + storeNodeNetwork(value : String) : String
    + storeNodeProperty(value : String) : String
    + storePeers(value : String) : String
    + storeTotalNodes(value : String) : String
    + storeTotalValidators(value : String) : String
  }
  class Simulator_result {
    + commitCounter : Map<Timestamp, Integer>
    + finalisedTpsStorage : Map<Timestamp, Integer>
    + inputTpsStorage : SortedMap<Timestamp, Integer>
    + prepareCounter : Map<Timestamp, Integer>
    + roundChangeCounter : Map<Timestamp, Integer>
    + Simulator_result()
  }
  class Simulator_service {
    ~ p2pServer : P2PServer
    ~ simulator_result : Simulator_result
    ~ wallet : Wallet
    + Simulator_service(p2pServer : P2PServer, wallet : Wallet, simulator_result : Simulator_result)
    + Simulator_service(wallet : Wallet)
    + getAsValidator() : boolean
    + getBlockSize() : int
    + getBlocks() : String
    + getBlocksinBlockPool() : String
    + getCommitMessageRate() : Map<Timestamp, Integer>
    + getCommitTPSJSON() : List<JSONObject>
    + getFinalisedTPS() : Map<Timestamp, Integer>
    + getFinalisedTPSJSON() : List<JSONObject>
    + getIP() : String
    + getIPS() : String
    + getInputTPS() : Map<Timestamp, Integer>
    + getInputTPSJSON() : List<JSONObject>
    + getJSONData(objData : Map<Timestamp, Integer>) : List<JSONObject>
    + getNodeBehavior() : String
    + getNodeLatency() : long
    + getNodeNetwork() : String
    + getNodeProperty() : int
    + getNoofBlocks() : int
    + getPrepareMessageRate() : Map<Timestamp, Integer>
    + getPrepareTPSJSON() : List<JSONObject>
    + getProcessedTPS() : String
    + getRoundChange() : long
    + getRoundChangeMessageRate() : Map<Timestamp, Integer>
    + getRoundChangeTPSJSON() : List<JSONObject>
    + getTotalNodes() : int
    + getTotalTransactionsValidatedNo() : String
    + getTotalValidators() : int
    + getTransactionsinPoolNo(roundno : String) : String
    + getVersion() : String
    + initiateConnection()
    + listentoPeers()
    + sendMessageToPeer(message : String)
    + setRoundChange(value : String)
    + startSimulation(notxs : String, nothreads : String)
    + startSimulationSingle(notxs : String)
    + storeAsValidator(value : String)
    + storeBlockSize(value : String)
    + storeIPS(value : String)
    + storeNodeBehavior(value : String)
    + storeNodeLatency(value : String)
    + storeNodeNetwork(value : String)
    + storeNodeProperty(value : String)
    + storeTotalNodes(value : String)
    + storeTotalValidators(value : String)
  }
}
@enduml

PlantUML version 1.2022.7(Mon Aug 22 19:01:30 CEST 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>