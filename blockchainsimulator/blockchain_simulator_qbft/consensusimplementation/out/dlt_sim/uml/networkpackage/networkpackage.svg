<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="921px" preserveAspectRatio="none" style="width:4519px;height:921px;background:#FFFFFF;" version="1.1" viewBox="0 0 4519 921" width="4519px" zoomAndPan="magnify"><defs/><g><!--MD5=[eb3ee92a8381fbf23043ab7f94c29bda]
cluster org.renaultleat.network--><g id="cluster_org.renaultleat.network"><path d="M8.5,6 L197.5,6 A3.75,3.75 0 0 1 200,8.5 L207,28.2969 L4509.5,28.2969 A2.5,2.5 0 0 1 4512,30.7969 L4512,911.5 A2.5,2.5 0 0 1 4509.5,914 L8.5,914 A2.5,2.5 0 0 1 6,911.5 L6,8.5 A2.5,2.5 0 0 1 8.5,6 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6" x2="207" y1="28.2969" y2="28.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="188" x="10" y="20.9951">org.renaultleat.network</text></g><!--MD5=[e9d32aba5855cd2d02663dab53fb2d9c]
class NetworkTopologyGenerator--><g id="elem_NetworkTopologyGenerator"><rect codeLine="2" fill="#F1F1F1" height="129.4844" id="NetworkTopologyGenerator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="775" x="21.5" y="196"/><ellipse cx="309.25" cy="212" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M312.2188,217.6406 Q311.6406,217.9375 311,218.0781 Q310.3594,218.2344 309.6563,218.2344 Q307.1563,218.2344 305.8281,216.5938 Q304.5156,214.9375 304.5156,211.8125 Q304.5156,208.6875 305.8281,207.0313 Q307.1563,205.375 309.6563,205.375 Q310.3594,205.375 311,205.5313 Q311.6563,205.6875 312.2188,205.9844 L312.2188,208.7031 Q311.5938,208.125 311,207.8594 Q310.4063,207.5781 309.7813,207.5781 Q308.4375,207.5781 307.75,208.6563 Q307.0625,209.7188 307.0625,211.8125 Q307.0625,213.9063 307.75,214.9844 Q308.4375,216.0469 309.7813,216.0469 Q310.4063,216.0469 311,215.7813 Q311.5938,215.5 312.2188,214.9219 L312.2188,217.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="191" x="329.75" y="216.8467">NetworkTopologyGenerator</text><line style="stroke:#181818;stroke-width:0.5;" x1="22.5" x2="795.5" y1="228" y2="228"/><line style="stroke:#181818;stroke-width:0.5;" x1="22.5" x2="795.5" y1="236" y2="236"/><ellipse cx="32.5" cy="249.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="201" x="41.5" y="252.9951">NetworkTopologyGenerator()</text><ellipse cx="32.5" cy="265.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="509" x="41.5" y="269.292">generateRingLatticeTopologyCSV(totalNodeCount : int, meanDegree : int)</text><ellipse cx="32.5" cy="282.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="530" x="41.5" y="285.5889">generateWattsStrogatzTopologyCSV(totalNodeCount : int, meanDegree : int)</text><ellipse cx="32.5" cy="298.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="136" x="41.5" y="301.8857">main(args : String[])</text><ellipse cx="32.5" cy="314.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="749" x="41.5" y="318.1826">writeToCSV(totalConnectionMap : Map&lt;Integer, Map&lt;Integer, Map&lt;Integer, Boolean&gt;&gt;&gt;, topology : String)</text></g><!--MD5=[518b6b5e0f80fd3873a9eea4dea400ea]
class P2PServer--><g id="elem_P2PServer"><rect codeLine="9" fill="#F1F1F1" height="439.125" id="P2PServer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="3664" x="832" y="41"/><ellipse cx="2624.25" cy="57" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2627.2188,62.6406 Q2626.6406,62.9375 2626,63.0781 Q2625.3594,63.2344 2624.6563,63.2344 Q2622.1563,63.2344 2620.8281,61.5938 Q2619.5156,59.9375 2619.5156,56.8125 Q2619.5156,53.6875 2620.8281,52.0313 Q2622.1563,50.375 2624.6563,50.375 Q2625.3594,50.375 2626,50.5313 Q2626.6563,50.6875 2627.2188,50.9844 L2627.2188,53.7031 Q2626.5938,53.125 2626,52.8594 Q2625.4063,52.5781 2624.7813,52.5781 Q2623.4375,52.5781 2622.75,53.6563 Q2622.0625,54.7188 2622.0625,56.8125 Q2622.0625,58.9063 2622.75,59.9844 Q2623.4375,61.0469 2624.7813,61.0469 Q2625.4063,61.0469 2626,60.7813 Q2626.5938,60.5 2627.2188,59.9219 L2627.2188,62.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="2644.75" y="61.8467">P2PServer</text><line style="stroke:#181818;stroke-width:0.5;" x1="833" x2="4495" y1="73" y2="73"/><ellipse cx="843" cy="86.6484" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="852" y="89.9951">blockPool : BlockPool</text><ellipse cx="843" cy="102.9453" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="852" y="106.292">blockchain : Blockchain</text><ellipse cx="843" cy="119.2422" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="852" y="122.5889">currentuser : String</text><ellipse cx="843" cy="135.5391" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="288" x="852" y="138.8857">nodeCommunicator : NodeCommunicator</text><ellipse cx="843" cy="151.8359" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="368" x="852" y="155.1826">nodeCommunicatorPenta : NodeCommunicatorPenta</text><ellipse cx="843" cy="168.1328" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="354" x="852" y="171.4795">nodeCommunicatorQuar : NodeCommunicatorQuar</text><ellipse cx="843" cy="184.4297" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="340" x="852" y="187.7764">nodeCommunicatorSec : NodeCommunicatorSec</text><ellipse cx="843" cy="200.7266" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="326" x="852" y="204.0732">nodeCommunicatorSix : NodeCommunicatorSix</text><ellipse cx="843" cy="217.0234" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="334" x="852" y="220.3701">nodeCommunicatorTer : NodeCommunicatorTer</text><ellipse cx="843" cy="233.3203" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="852" y="236.667">nonValidator : NonValidator</text><ellipse cx="843" cy="249.6172" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="253" x="852" y="252.9639">pbftMessagePool : BFTMessagePool</text><ellipse cx="843" cy="265.9141" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="239" x="852" y="269.2607">queueResource : QueueResource</text><ellipse cx="843" cy="282.2109" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="231" x="852" y="285.5576">transactionPool : TransactionPool</text><ellipse cx="843" cy="298.5078" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="852" y="301.8545">validator : Validator</text><ellipse cx="843" cy="314.8047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="852" y="318.1514">wallet : Wallet</text><line style="stroke:#181818;stroke-width:0.5;" x1="833" x2="4495" y1="325.4531" y2="325.4531"/><ellipse cx="843" cy="339.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="3638" x="852" y="342.4482">P2PServer(blockChain : Blockchain, transactionPool : TransactionPool, wallet : Wallet, pbftMessagePool : BFTMessagePool, validator : Validator, nonValidator : NonValidator, blockPool : BlockPool, nodeCommunicator : NodeCommunicator, queueResource : QueueResource, nodeCommunicatorSec : NodeCommunicatorSec, nodeCommunicatorTer : NodeCommunicatorTer, nodeCommunicatorQuar : NodeCommunicatorQuar, nodeCommunicatorPenta : NodeCommunicatorPenta, nodeCommunicatorSix : NodeCommunicatorSix)</text><ellipse cx="843" cy="355.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1580" x="852" y="358.7451">P2PServer(blockChain : Blockchain, transactionPool : TransactionPool, wallet : Wallet, pbftMessagePool : BFTMessagePool, validator : Validator, nonValidator : NonValidator, blockPool : BlockPool, queueResource : QueueResource)</text><ellipse cx="843" cy="371.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="221" x="852" y="375.042">communicate(message : String)</text><ellipse cx="843" cy="387.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="67" x="852" y="391.3389">connect()</text><ellipse cx="843" cy="404.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="852" y="407.6357">connectToPeers()</text><ellipse cx="843" cy="420.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="852" y="423.9326">getPeerList() : List&lt;String&gt;</text><ellipse cx="843" cy="436.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="2395" x="852" y="440.2295">listenToPeers(user : String, nodeCommunicator : NodeCommunicator, peers : List&lt;String&gt;, nodeCommunicatorSec : NodeCommunicatorSec, nodeCommunicatorTer : NodeCommunicatorTer, nodeCommunicatorQuar : NodeCommunicatorQuar, nodeCommunicatorPenta : NodeCommunicatorPenta, nodeCommunicatorSix : NodeCommunicatorSix)</text><ellipse cx="843" cy="453.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="478" x="852" y="456.5264">startSimulationBroadcast(no_of_transactions : int, no_of_threads : int)</text><ellipse cx="843" cy="469.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="384" x="852" y="472.8232">startSimulationBroadcastSingle(no_of_transactions : int)</text></g><!--MD5=[03f89b227da79a2fe071c5bef7e7b2c4]
class QueueResource--><g id="elem_QueueResource"><rect codeLine="35" fill="#F1F1F1" height="357.6406" id="QueueResource" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="649" x="84.5" y="540"/><ellipse cx="347.75" cy="556" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M350.7188,561.6406 Q350.1406,561.9375 349.5,562.0781 Q348.8594,562.2344 348.1563,562.2344 Q345.6563,562.2344 344.3281,560.5938 Q343.0156,558.9375 343.0156,555.8125 Q343.0156,552.6875 344.3281,551.0313 Q345.6563,549.375 348.1563,549.375 Q348.8594,549.375 349.5,549.5313 Q350.1563,549.6875 350.7188,549.9844 L350.7188,552.7031 Q350.0938,552.125 349.5,551.8594 Q348.9063,551.5781 348.2813,551.5781 Q346.9375,551.5781 346.25,552.6563 Q345.5625,553.7188 345.5625,555.8125 Q345.5625,557.9063 346.25,558.9844 Q346.9375,560.0469 348.2813,560.0469 Q348.9063,560.0469 349.5,559.7813 Q350.0938,559.5 350.7188,558.9219 L350.7188,561.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="368.25" y="560.8467">QueueResource</text><line style="stroke:#181818;stroke-width:0.5;" x1="85.5" x2="732.5" y1="572" y2="572"/><polygon fill="none" points="95.5,581.6484,91.5,587.6484,99.5,587.6484" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="391" x="104.5" y="588.9951">messageBlockingQueue : BlockingQueue&lt;JSONObject&gt;</text><polygon fill="none" points="95.5,597.9453,91.5,603.9453,99.5,603.9453" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="417" x="104.5" y="605.292">messageBlockingQueueSec : BlockingQueue&lt;JSONObject&gt;</text><polygon fill="none" points="95.5,614.2422,91.5,620.2422,99.5,620.2422" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="404" x="104.5" y="621.5889">transactionBlockingQueue : BlockingQueue&lt;JSONObject&gt;</text><polygon fill="none" points="95.5,630.5391,91.5,636.5391,99.5,636.5391" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="444" x="104.5" y="637.8857">transactionBlockingQueuePenta : BlockingQueue&lt;JSONObject&gt;</text><polygon fill="none" points="95.5,646.8359,91.5,652.8359,99.5,652.8359" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="437" x="104.5" y="654.1826">transactionBlockingQueueQuar : BlockingQueue&lt;JSONObject&gt;</text><polygon fill="none" points="95.5,663.1328,91.5,669.1328,99.5,669.1328" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="430" x="104.5" y="670.4795">transactionBlockingQueueSec : BlockingQueue&lt;JSONObject&gt;</text><polygon fill="none" points="95.5,679.4297,91.5,685.4297,99.5,685.4297" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="423" x="104.5" y="686.7764">transactionBlockingQueueSix : BlockingQueue&lt;JSONObject&gt;</text><polygon fill="none" points="95.5,695.7266,91.5,701.7266,99.5,701.7266" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="427" x="104.5" y="703.0732">transactionBlockingQueueTer : BlockingQueue&lt;JSONObject&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="85.5" x2="732.5" y1="710.375" y2="710.375"/><ellipse cx="95.5" cy="724.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="104.5" y="727.3701">QueueResource()</text><ellipse cx="95.5" cy="740.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="423" x="104.5" y="743.667">getMessageBlockingQueue() : BlockingQueue&lt;JSONObject&gt;</text><ellipse cx="95.5" cy="756.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="449" x="104.5" y="759.9639">getMessageBlockingQueueSec() : BlockingQueue&lt;JSONObject&gt;</text><ellipse cx="95.5" cy="772.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="441" x="104.5" y="776.2607">getTransactionBlockingQueue() : BlockingQueue&lt;JSONObject&gt;</text><ellipse cx="95.5" cy="789.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="481" x="104.5" y="792.5576">getTransactionBlockingQueuePenta() : BlockingQueue&lt;JSONObject&gt;</text><ellipse cx="95.5" cy="805.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="474" x="104.5" y="808.8545">getTransactionBlockingQueueQuar() : BlockingQueue&lt;JSONObject&gt;</text><ellipse cx="95.5" cy="821.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="467" x="104.5" y="825.1514">getTransactionBlockingQueueSec() : BlockingQueue&lt;JSONObject&gt;</text><ellipse cx="95.5" cy="838.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="460" x="104.5" y="841.4482">getTransactionBlockingQueueSix() : BlockingQueue&lt;JSONObject&gt;</text><ellipse cx="95.5" cy="854.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="464" x="104.5" y="857.7451">getTransactionBlockingQueueTer() : BlockingQueue&lt;JSONObject&gt;</text><ellipse cx="95.5" cy="870.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="592" x="104.5" y="874.042">setMessageBlockingQueue(messageBlockingQueue : BlockingQueue&lt;JSONObject&gt;)</text><ellipse cx="95.5" cy="886.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="623" x="104.5" y="890.3389">setTransactionBlockingQueue(transactionBlockingQueue : BlockingQueue&lt;JSONObject&gt;)</text></g><!--MD5=[b14be272f3670818f69059493c3a76b5]
@startuml
package org.renaultleat.network {
  class NetworkTopologyGenerator {
    + NetworkTopologyGenerator()
    + generateRingLatticeTopologyCSV(totalNodeCount : int, meanDegree : int) {static}
    + generateWattsStrogatzTopologyCSV(totalNodeCount : int, meanDegree : int) {static}
    + main(args : String[]) {static}
    + writeToCSV(totalConnectionMap : Map<Integer, Map<Integer, Map<Integer, Boolean>>>, topology : String) {static}
  }
  class P2PServer {
    + blockPool : BlockPool
    + blockchain : Blockchain
    + currentuser : String
    + nodeCommunicator : NodeCommunicator
    + nodeCommunicatorPenta : NodeCommunicatorPenta
    + nodeCommunicatorQuar : NodeCommunicatorQuar
    + nodeCommunicatorSec : NodeCommunicatorSec
    + nodeCommunicatorSix : NodeCommunicatorSix
    + nodeCommunicatorTer : NodeCommunicatorTer
    + nonValidator : NonValidator
    + pbftMessagePool : BFTMessagePool
    + queueResource : QueueResource
    + transactionPool : TransactionPool
    + validator : Validator
    + wallet : Wallet
    + P2PServer(blockChain : Blockchain, transactionPool : TransactionPool, wallet : Wallet, pbftMessagePool : BFTMessagePool, validator : Validator, nonValidator : NonValidator, blockPool : BlockPool, nodeCommunicator : NodeCommunicator, queueResource : QueueResource, nodeCommunicatorSec : NodeCommunicatorSec, nodeCommunicatorTer : NodeCommunicatorTer, nodeCommunicatorQuar : NodeCommunicatorQuar, nodeCommunicatorPenta : NodeCommunicatorPenta, nodeCommunicatorSix : NodeCommunicatorSix)
    + P2PServer(blockChain : Blockchain, transactionPool : TransactionPool, wallet : Wallet, pbftMessagePool : BFTMessagePool, validator : Validator, nonValidator : NonValidator, blockPool : BlockPool, queueResource : QueueResource)
    + communicate(message : String)
    + connect()
    + connectToPeers()
    + getPeerList() : List<String>
    + listenToPeers(user : String, nodeCommunicator : NodeCommunicator, peers : List<String>, nodeCommunicatorSec : NodeCommunicatorSec, nodeCommunicatorTer : NodeCommunicatorTer, nodeCommunicatorQuar : NodeCommunicatorQuar, nodeCommunicatorPenta : NodeCommunicatorPenta, nodeCommunicatorSix : NodeCommunicatorSix)
    + startSimulationBroadcast(no_of_transactions : int, no_of_threads : int)
    + startSimulationBroadcastSingle(no_of_transactions : int)
  }
  class QueueResource {
    ~ messageBlockingQueue : BlockingQueue<JSONObject>
    ~ messageBlockingQueueSec : BlockingQueue<JSONObject>
    ~ transactionBlockingQueue : BlockingQueue<JSONObject>
    ~ transactionBlockingQueuePenta : BlockingQueue<JSONObject>
    ~ transactionBlockingQueueQuar : BlockingQueue<JSONObject>
    ~ transactionBlockingQueueSec : BlockingQueue<JSONObject>
    ~ transactionBlockingQueueSix : BlockingQueue<JSONObject>
    ~ transactionBlockingQueueTer : BlockingQueue<JSONObject>
    + QueueResource()
    + getMessageBlockingQueue() : BlockingQueue<JSONObject>
    + getMessageBlockingQueueSec() : BlockingQueue<JSONObject>
    + getTransactionBlockingQueue() : BlockingQueue<JSONObject>
    + getTransactionBlockingQueuePenta() : BlockingQueue<JSONObject>
    + getTransactionBlockingQueueQuar() : BlockingQueue<JSONObject>
    + getTransactionBlockingQueueSec() : BlockingQueue<JSONObject>
    + getTransactionBlockingQueueSix() : BlockingQueue<JSONObject>
    + getTransactionBlockingQueueTer() : BlockingQueue<JSONObject>
    + setMessageBlockingQueue(messageBlockingQueue : BlockingQueue<JSONObject>)
    + setTransactionBlockingQueue(transactionBlockingQueue : BlockingQueue<JSONObject>)
  }
}
@enduml

PlantUML version 1.2022.7(Mon Aug 22 19:01:30 CEST 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>